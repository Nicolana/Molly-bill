version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: molly-bill-postgres
    environment:
      POSTGRES_DB: molly_bill
      POSTGRES_USER: molly_user
      POSTGRES_PASSWORD: molly_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - molly-bill-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U molly_user -d molly_bill"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端 FastAPI 服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: molly-bill-backend
    environment:
      - DATABASE_URL=postgresql://molly_user:molly_password@postgres:5432/molly_bill
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - molly-bill-network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # 前端 Next.js 服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: molly-bill-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - molly-bill-network
    restart: unless-stopped

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: molly-bill-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - molly-bill-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  molly-bill-network:
    driver: bridge 