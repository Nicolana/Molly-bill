version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: molly-bill-postgres
    env_file:
      - docker.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-molly_bill}
      POSTGRES_USER: ${POSTGRES_USER:-molly_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-molly_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - molly-bill-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-molly_user} -d ${POSTGRES_DB:-molly_bill}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 后端 FastAPI 服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: molly-bill-backend
    env_file:
      - docker.env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-molly_user}:${POSTGRES_PASSWORD:-molly_password}@postgres:5432/${POSTGRES_DB:-molly_bill}
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-change-in-production}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      DASHSCOPE_API_KEY: ${DASHSCOPE_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8821:8000"
    networks:
      - molly-bill-network
    restart: unless-stopped
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端 Next.js 服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-/api/v1}
    container_name: molly-bill-frontend
    env_file:
      - docker.env
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-/api/v1}
    depends_on:
      - backend
    ports:
      - "3010:3000"
    networks:
      - molly-bill-network
    restart: unless-stopped

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: molly-bill-nginx
    ports:
      - "8823:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - molly-bill-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  molly-bill-network:
    driver: bridge 